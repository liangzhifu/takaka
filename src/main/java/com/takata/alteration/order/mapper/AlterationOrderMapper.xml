<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AlterationOrderMapper" >
  <resultMap id="BaseResultMap" type="com.takata.alteration.order.domain.AlterationOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_channel" property="orderChannel" jdbcType="INTEGER" />
    <result column="delete_state" property="deleteState" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_state" property="orderState" jdbcType="VARCHAR" />
    <result column="invalidate_text" property="invalidateText" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_channel, delete_state, create_by, create_time, update_by, update_time, 
    order_state, invalidate_text
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.takata.alteration.order.domain.AlterationOrder" >
    select 
    <include refid="Base_Column_List" />
    from alteration_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.takata.alteration.order.domain.AlterationOrder"
          useGeneratedKeys="true" keyProperty="id">
    insert into alteration_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderChannel != null" >
        order_channel,
      </if>
      <if test="deleteState != null" >
        delete_state,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="invalidateText != null" >
        invalidate_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderChannel != null" >
        #{orderChannel,jdbcType=INTEGER},
      </if>
      <if test="deleteState != null" >
        #{deleteState,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="invalidateText != null" >
        #{invalidateText,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.takata.alteration.order.domain.AlterationOrder" >
    update alteration_order
    <set >
      <if test="orderChannel != null" >
        order_channel = #{orderChannel,jdbcType=INTEGER},
      </if>
      <if test="deleteState != null" >
        delete_state = #{deleteState,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="invalidateText != null" >
        invalidate_text = #{invalidateText,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>